import{s as P,o as D,u as R,e as h,g as L,l as f,h as v,i as H,m as E,k as b,p as F}from"../chunks/scheduler.ff9b50f9.js";import{S as g,i as w,d as A,v as B,a as U,b as O,t as N,c as W,e as S,n as _,s as y,p,h as C}from"../chunks/index.5fbdb1aa.js";import{f as T}from"../chunks/index.2527a6c0.js";const G="src/routes/dashboard/[uid]/+page.svelte";function m(i){let t,e,c=i[0].uid+"",r,n,a,u;const o={c:function(){t=L("div"),e=f(`Inner Dashboard\r
        The Current User's UID is: `),r=f(c),n=f(`;\r
\r
        CAN NOW CHECK USER'S ID BEFORE ALLOWING TO DO STUFF IN THE CLOUD LIKE UPLOAD IMAGES!!!\r
        SO NOW I SHOULD BE GOOD TO START WORKING ON DATABASE STUFF\r
        IT FEELS WEIRD THAT I'M DOING ALL MY AUTH ON THE FRONTEND BESIDES PASSING THE uid\r
        in params BUT APPARENTLY THAT'S HOW FIREBASE IS SUPPOSED TO WORK!`),this.h()},l:function(s){t=v(s,"DIV",{});var d=H(t);e=E(d,`Inner Dashboard\r
        The Current User's UID is: `),r=E(d,c),n=E(d,`;\r
\r
        CAN NOW CHECK USER'S ID BEFORE ALLOWING TO DO STUFF IN THE CLOUD LIKE UPLOAD IMAGES!!!\r
        SO NOW I SHOULD BE GOOD TO START WORKING ON DATABASE STUFF\r
        IT FEELS WEIRD THAT I'M DOING ALL MY AUTH ON THE FRONTEND BESIDES PASSING THE uid\r
        in params BUT APPARENTLY THAT'S HOW FIREBASE IS SUPPOSED TO WORK!`),d.forEach(S),this.h()},h:function(){b(t,G,10,4,271)},m:function(s,d){U(s,t,d),_(t,e),_(t,r),_(t,n),u=!0},p:function(s,d){(!u||d&1)&&c!==(c=s[0].uid+"")&&y(r,c)},i:function(s){u||(s&&F(()=>{u&&(a||(a=p(t,T,{},!0)),a.run(1))}),u=!0)},o:function(s){s&&(a||(a=p(t,T,{},!1)),a.run(0)),u=!1},d:function(s){s&&S(t),s&&a&&a.end()}};return A("SvelteRegisterBlock",{block:o,id:m.name,type:"if",source:"(10:0) {#if intro_transition_ready}",ctx:i}),o}function I(i){let t,e=i[1]&&m(i);const c={c:function(){e&&e.c(),t=h()},l:function(n){e&&e.l(n),t=h()},m:function(n,a){e&&e.m(n,a),U(n,t,a)},p:function(n,[a]){n[1]?e?(e.p(n,a),a&2&&O(e,1)):(e=m(n),e.c(),O(e,1),e.m(t.parentNode,t)):e&&(C(),N(e,1,1,()=>{e=null}),W())},i:function(n){O(e)},o:function(n){N(e)},d:function(n){n&&S(t),e&&e.d(n)}};return A("SvelteRegisterBlock",{block:c,id:I.name,type:"component",source:"",ctx:i}),c}function k(i,t,e){let{$$slots:c={},$$scope:r}=t;B("Page",c,[]);let n=!1;D(()=>{e(1,n=!0)});let{data:a}=t;i.$$.on_mount.push(function(){a===void 0&&!("data"in t||i.$$.bound[i.$$.props.data])&&console.warn("<Page> was created without expected prop 'data'")});const u=["data"];return Object.keys(t).forEach(o=>{!~u.indexOf(o)&&o.slice(0,2)!=="$$"&&o!=="slot"&&console.warn(`<Page> was created with unknown prop '${o}'`)}),i.$$set=o=>{"data"in o&&e(0,a=o.data)},i.$capture_state=()=>({fade:T,onMount:D,onDestroy:R,intro_transition_ready:n,data:a}),i.$inject_state=o=>{"intro_transition_ready"in o&&e(1,n=o.intro_transition_ready),"data"in o&&e(0,a=o.data)},t&&"$$inject"in t&&i.$inject_state(t.$$inject),[a,n]}class Y extends g{constructor(t){super(t),w(this,t,k,I,P,{data:0}),A("SvelteRegisterComponent",{component:this,tagName:"Page",options:t,id:I.name})}get data(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set data(t){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{Y as component};
