- google.cloud.aiplatform was installed into the "TensorflowEnv" Conda environment on PC. To make it work I downgraded protobuf from version 4.something to version 3.20.x. This was done with pip in the conda terminal, not from the conda ui.

- Installed gcloud cli with Google Cloud CLI installer for windows powershells
for: gcloud auth application-default login

- notes from gcloud setup:
* Commands that require authentication will use alderfrench1@gmail.com by default
* Commands will reference project `mountainai-392023` by default
* Compute Engine commands will use region `us-west1` by default
* Compute Engine commands will use zone `us-west1-b` by default

- tf model details (converted to tf from original fastai .pkl mountainai model):
Input layer name: input_1:0
Output layer name: Identity:0
Input shape: (1, 3, 256, 256)
Output shape: (1, 774)

- Virtual Environment Details
    -> Between Sveltekit, Flask, and FastAI there are some dependency conflicts, so building the 
    project required the use of 3 different virtual environments (anaconda on PC and virtualenv on mac).
    Running the project requires the use of 2 different environments. 1. For the FastAI and Flask server
    to host the MountainAI model (On my PC 'Anaconda - FlaskFastAi'). 2. For the Sveltekit app (Just the
    default WSL environment on PC for me)

- Python Google App Engine Instance for Flask Server with AI 
 -> set its instance_class: F4 in app.yaml which may be more than necessary which
 costs money, consider trying F2 if it works fine in F4

 - The MtnBtn is broken and you have to click on its inner text - annoying I know I will fix it soon

 - to serve the Flask Server with Ngrok on PC, navigate to the folder containing Ngrok /misc/ngrok and run 
 ./ngrok.exe http 5000 in powershell 
 